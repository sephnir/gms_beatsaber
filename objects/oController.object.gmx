<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>FMODGMS_Sys_Create();
FMODGMS_Sys_Initialize(32);  
instance_create(x,y,oMouse);
steps=0;
//Load
song=get_string("Name of Song:","")
ini_open(working_directory+"\Songs"+"\"+song+"\"+song+".ini");
//ini_open("BS2.ini");
instance=0
songname=ini_read_string("General","Name","")
author=ini_read_string("General","author","")
artist=ini_read_string("General","artist","")
global.songoffset=ini_read_string("Load","songoffset","")
global.bg=background_add(ini_read_string("Load","background",""),false,false)
bgname=ini_read_string("Load","backgroundname","")
filename=ini_read_string("General","mp3","")
FMODGMS_Snd_LoadSound(filename);
channel = FMODGMS_Chan_CreateChannel();
FMODGMS_Snd_PlaySound(filename,channel);
sd=working_directory+string("/Songs/")
//file=get_open_filename_ext("|",filename,working_directory+string("\Songs\"+songname+"\"+filename),"Open Your Music File")
//musicfile=get_open_filename("All Files (*.*)|*.*","");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Mouse Controls
oMouse.x = mouse_x;
oMouse.y = mouse_y;

if mouse_check_button_pressed(mb_right){
    var note;
    note = instance_create(mouse_x,mouse_y,oNote);
    note.rot = round(random_range(0,3));
}
//Mouse Effect
if mouse_check_button(mb_left) &amp;&amp; oMouse.x != oMouse.xprevious{
    effect_create_above(ef_smoke,mouse_x,mouse_y,0,c_maroon);
}
//Sound Effect

if mouse_check_button(mb_left)&amp;&amp; oMouse.y &lt; oMouse.yprevious-10 &amp;&amp; oMouse.x &lt; oMouse.xprevious + 10 &amp;&amp; oMouse.x &gt; oMouse.xprevious - 10{
    if !audio_is_playing(sndSwipe){
        audio_play_sound(sndSwipe,1,0);
    }
}
if mouse_check_button(mb_left) &amp;&amp; oMouse.x &gt; oMouse.xprevious+10 &amp;&amp; oMouse.y &lt; oMouse.yprevious + 10 &amp;&amp; oMouse.y &gt; oMouse.yprevious - 10{
    if !audio_is_playing(sndSwipe){
        audio_play_sound(sndSwipe,1,0);
    }
}
if mouse_check_button(mb_left) &amp;&amp; oMouse.y &gt; oMouse.yprevious+10 &amp;&amp; oMouse.x &lt; oMouse.xprevious + 10 &amp;&amp; oMouse.x &gt; oMouse.xprevious - 10{
    if !audio_is_playing(sndSwipe){
        audio_play_sound(sndSwipe,1,0);
    }
}
if mouse_check_button(mb_left) &amp;&amp; oMouse.x &lt; oMouse.xprevious-10 &amp;&amp; oMouse.y &lt; oMouse.yprevious + 10 &amp;&amp; oMouse.y &gt; oMouse.yprevious - 10{
    if !audio_is_playing(sndSwipe){
        audio_play_sound(sndSwipe,1,0);
    }
}
//Step Counter
steps+=1;
var noteb,noter;
    if ini_read_real("Notes","n"+string(self.steps)+"-1",0) = true{
        noteb = instance_create(oNoteSpawner.x,oNoteSpawner.y,oNote);
        noteb.rot = ini_read_real("Notes","n"+string(self.steps)+"-1",0);
    }
    if ini_read_real("Notes","n"+string(self.steps)+"-2",0){
        noter = instance_create(oNoteSpawner.x+36,oNoteSpawner.y,oNote);
        noter.rot = ini_read_real("Notes","n"+string(self.steps)+"-2",0);
    }

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fntHUD);
draw_text(x,y,"Steps: " + string(steps));
draw_text(x,y+50,"Song: " + string(songname));
draw_text(x,y+100,"MP3: " + string(filename));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
